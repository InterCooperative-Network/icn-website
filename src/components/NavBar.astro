---
// src/components/NavBar.astro
const navLinks = [
  { href: "/about", text: "About" },
  { href: "/join", text: "Join" },
  { href: "/governance", text: "Governance" },
  { href: "/infrastructure", text: "Infrastructure" },
  { href: "/projects", text: "Projects" },
  { href: "/community", text: "Community" },
  { href: "/docs", text: "Docs" },
  { href: "/blog", text: "Blog" },
];
---

<header class="bg-midnight-navy/80 backdrop-blur-md sticky top-0 z-50 border-b border-soft-black/50 shadow-sm">
  <div class="container mx-auto flex items-center justify-between h-[var(--header-height)] px-4">
    <a href="/" class="flex items-center space-x-3">
      <svg xmlns="http://www.w3.org/2000/svg" class="h-10 w-10 text-nav-active-link" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="1.5">
        <path stroke-linecap="round" stroke-linejoin="round" d="M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
        <path stroke-linecap="round" stroke-linejoin="round" d="M7.5 12a4.5 4.5 0 014.5-4.5M7.5 12a4.5 4.5 0 004.5 4.5m4.5-4.5a4.5 4.5 0 01-4.5 4.5m4.5-4.5a4.5 4.5 0 00-4.5-4.5" />
        <path stroke-linecap="round" stroke-linejoin="round" d="M12 16.5V12m0-4.5V3M16.5 12H12m-4.5 0H3" />
      </svg>
      <span class="font-semibold text-sm text-white hover:text-sky-blue transition-colors uppercase tracking-wider">INTERCOOPERATIVE NETWORK</span>
    </a>

    <!-- Desktop Navigation -->
    <nav class="hidden md:flex space-x-8 lg:space-x-10">
      {navLinks.map(link => (
        <a 
          href={link.href} 
          class="text-slate-gray hover:text-sky-blue font-medium transition-colors text-base"
          aria-current={Astro.url.pathname === link.href || (link.href.includes('#') && Astro.url.pathname === link.href.split('#')[0]) ? "page" : false}
        >
          {link.text}
        </a>
      ))}
    </nav>
    
    <!-- Mobile Menu Button -->
    <button id="menu-toggle" class="md:hidden text-white hover:text-sky-blue focus:outline-none" aria-label="Open main menu" aria-expanded="false" aria-controls="mobile-menu">
      <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16m-7 6h7"></path></svg>
    </button>
  </div>

  <!-- Mobile Menu (conditionally rendered via JS) -->
  <div id="mobile-menu" class="md:hidden hidden bg-midnight-navy/95 backdrop-blur-md absolute top-full left-0 w-full shadow-xl flex flex-col items-center space-y-1 py-4">
    {navLinks.map(link => (
      <a 
        href={link.href} 
        class="text-slate-gray hover:text-sky-blue block px-3 py-3 rounded-md text-base font-medium w-11/12 text-center hover:bg-soft-black transition-colors"
        aria-current={Astro.url.pathname === link.href || (link.href.includes('#') && Astro.url.pathname === link.href.split('#')[0]) ? "page" : false}
      >
        {link.text}
      </a>
    ))}
  </div>
</header>

<script>
  // Basic Mobile Menu Toggle
  const menuToggle = document.getElementById('menu-toggle');
  const mobileMenu = document.getElementById('mobile-menu');

  if (menuToggle && mobileMenu) {
    menuToggle.addEventListener('click', () => {
      const isExpanded = menuToggle.getAttribute('aria-expanded') === 'true' || false;
      menuToggle.setAttribute('aria-expanded', String(!isExpanded));
      mobileMenu.classList.toggle('hidden');
      if (!isExpanded) {
        mobileMenu.classList.add('flex');
      } else {
        mobileMenu.classList.remove('flex');
      }
      document.body.classList.toggle('mobile-menu-open');
    });
  }
</script>

<style>
  /* Style for the active navigation link */
  nav a[aria-current="page"],
  #mobile-menu a[aria-current="page"] {
    color: var(--color-nav-active-link); /* Active link is now nav-active-link */
    font-weight: 600;
  }
  #mobile-menu a[aria-current="page"] {
      background-color: var(--color-soft-black);
  }
</style> 