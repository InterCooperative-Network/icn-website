---
// src/components/HeroSection.astro
export interface Props {
  // Pretitle like "OPEN - FEDERATED - COOPERATIVE"
  pretitle?: string;
  
  // Main multi-line headline
  headline1?: string;
  // headline2 and headline3 will be effectively removed by not using them or defaulting to empty
  // tagline is already removed
  
  // Descriptive paragraph
  description?: string;
  
  supportingSubhead?: string;
  
  primaryButtonText?: string;
  primaryButtonLink?: string;
  secondaryButtonText?: string;
  secondaryButtonLink?: string;
  
  showImage?: boolean;
  imageUrl?: string;
  imageAlt?: string;
}

const {
  pretitle = "OPEN • FEDERATED • COOPERATIVE",
  headline1 = "Infrastructure for People—Not Empires.",
  supportingSubhead = "Build, govern, and own the systems that shape your world.\nNo corporate landlords. No imperial gatekeepers. Just us, together.",
  primaryButtonText = "Get Started",
  primaryButtonLink = "/get-started",
  secondaryButtonText = "How It Works",
  secondaryButtonLink = "/#how-it-works",
  showImage = true,
  imageUrl = "/images/hero-globe.png", 
  imageAlt = "Abstract network globe representing interconnectedness"
} = Astro.props;
---

<section class="bg-midnight-navy text-white py-16 md:py-20 lg:py-24 relative overflow-hidden">
  {/* Parallax Background Layer */}
  <div class="absolute inset-0 z-0 bg-gradient-to-br from-slate-900 via-slate-800 to-slate-900 opacity-90 parallax-bg" style="background-image: url('/images/your-texture.svg'); background-attachment: fixed; background-size: cover;"></div>
  
  <div class="container mx-auto px-4 relative z-10">
    <div class="flex flex-col md:flex-row items-center gap-10 md:gap-12 lg:gap-16">
      <!-- Text Content Area (Left) -->
      <div class="md:w-[55%] text-center md:text-left">
        {pretitle && (
          <p class="text-accent-glow font-semibold tracking-widest text-xs sm:text-sm uppercase mb-5 opacity-0 animate-fade-in">
            {pretitle}
          </p>
        )}
        <h1 class="text-4xl sm:text-5xl lg:text-6xl font-extrabold leading-tight max-w-3xl mb-6 text-white opacity-0 animate-fade-in-delay-200">
          {headline1}
        </h1>
        {supportingSubhead && (
          <p class="text-lg sm:text-xl text-light-slate mb-8 whitespace-pre-line opacity-0 animate-fade-in-delay-400">
            {supportingSubhead}
          </p>
        )}
        
        <div class="flex flex-col sm:flex-row justify-center md:justify-start gap-4 sm:gap-5 mt-8 opacity-0 animate-fade-in-delay-600">
          <a href={primaryButtonLink} class="btn btn-primary">
            {primaryButtonText}
          </a>
          <a href={secondaryButtonLink} class="btn btn-secondary">
            {secondaryButtonText}
          </a>
        </div>
        <div class="mt-10 text-center sm:text-left opacity-0 animate-fade-in-delay-600">
          <a href="#how-it-works" class="inline-block text-accent-glow animate-bounce text-sm font-medium hover:underline">
            ↓ Learn more
          </a>
        </div>
      </div>
      
      <!-- Image Area (Right) -->
      {showImage && (
        <div class="md:w-[45%] mt-10 md:mt-0 flex items-center justify-center md:justify-end animate-float">
          <img src={imageUrl} alt={imageAlt} class="w-full max-w-xs sm:max-w-sm md:max-w-md lg:max-w-lg xl:max-w-xl object-contain" />
        </div>
      )}
    </div>
  </div>
</section>

<style>
  /* Parallax CSS might be better in global.css if used elsewhere, or scoped here */
  /* .parallax-bg is handled by inline style for now to ensure attachment and size */
  h1 {
    font-family: var(--font-display);
    letter-spacing: -0.01em;
  }
  /* Ensure enough vertical space if image is shorter than text on md screens */
  @media (min-width: 768px) {
    .flex-col.md\:flex-row > div:last-child {
      align-self: stretch;
    }
    .flex-col.md\:flex-row > div:last-child img {
      height: 100%;
      max-height: 65vh;
    }
  }
</style> 